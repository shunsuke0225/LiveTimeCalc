/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Falcon;

import java.math.BigDecimal;

/**
 *
 * @author C0117042
 */
public class Live_Frame extends javax.swing.JFrame {
    Parameter par = new Parameter();
    Parameter par2 = new Parameter();

    Calc c = new Calc();

    /**
     * Creates new form Live_Frame
     */
    public Live_Frame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        buttonGroup4 = new javax.swing.ButtonGroup();
        buttonGroup5 = new javax.swing.ButtonGroup();
        buttonGroup6 = new javax.swing.ButtonGroup();
        buttonGroup7 = new javax.swing.ButtonGroup();
        buttonGroup8 = new javax.swing.ButtonGroup();
        jScrollPane3 = new javax.swing.JScrollPane();
        jEditorPane1 = new javax.swing.JEditorPane();
        rehearsal = new javax.swing.JTextField();
        live = new javax.swing.JTextField();
        have_a_break = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        num = new javax.swing.JTextField();
        band = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        chooseRehearsal = new javax.swing.JRadioButton();
        chooseLive = new javax.swing.JRadioButton();
        chooseBreak = new javax.swing.JRadioButton();
        choosePhase = new javax.swing.JRadioButton();
        chooseBand = new javax.swing.JRadioButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        somethingCalc = new javax.swing.JButton();
        chooseAll = new javax.swing.JRadioButton();
        all = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        add = new javax.swing.JButton();
        gap = new javax.swing.JTextField();
        jRadioButton1 = new javax.swing.JRadioButton();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();

        jScrollPane3.setViewportView(jEditorPane1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("ライブ時間逆算アプリFalcon");
        setBackground(new java.awt.Color(255, 102, 102));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setFocusable(false);
        setForeground(java.awt.Color.orange);

        rehearsal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rehearsalActionPerformed(evt);
            }
        });

        live.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                liveActionPerformed(evt);
            }
        });

        have_a_break.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                have_a_breakActionPerformed(evt);
            }
        });

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("AR P丸ゴシック体M", 1, 24)); // NOI18N
        jTextArea1.setRows(5);
        jTextArea1.setTabSize(16);
        jTextArea1.setToolTipText("");
        jScrollPane1.setViewportView(jTextArea1);

        num.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numActionPerformed(evt);
            }
        });

        band.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bandActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        jLabel1.setText("リハーサルの時間");

        jLabel2.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        jLabel2.setText("本番の時間");

        jLabel3.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        jLabel3.setText("休憩の時間");

        buttonGroup1.add(chooseRehearsal);
        chooseRehearsal.setText("リハーサルの時間");
        chooseRehearsal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chooseRehearsalActionPerformed(evt);
            }
        });

        buttonGroup1.add(chooseLive);
        chooseLive.setText("本番の時間");
        chooseLive.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chooseLiveActionPerformed(evt);
            }
        });

        buttonGroup1.add(chooseBreak);
        chooseBreak.setText("休憩の時間");
        chooseBreak.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chooseBreakActionPerformed(evt);
            }
        });

        buttonGroup1.add(choosePhase);
        choosePhase.setText("部数");
        choosePhase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                choosePhaseActionPerformed(evt);
            }
        });

        buttonGroup1.add(chooseBand);
        chooseBand.setText("バンド数");
        chooseBand.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chooseBandActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        jLabel4.setText("部数");

        jLabel5.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        jLabel5.setText("バンド数");

        jLabel6.setText("分");

        jLabel7.setText("分");

        jLabel8.setText("分");

        somethingCalc.setBackground(new java.awt.Color(102, 204, 255));
        somethingCalc.setText("計算");
        somethingCalc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                somethingCalcActionPerformed(evt);
            }
        });

        buttonGroup1.add(chooseAll);
        chooseAll.setText("全体の時間");
        chooseAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chooseAllActionPerformed(evt);
            }
        });

        all.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        jLabel9.setText("全体の時間");

        jLabel10.setText("分");

        add.setBackground(new java.awt.Color(255, 102, 102));
        add.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        add.setForeground(new java.awt.Color(255, 255, 255));
        add.setText("決定");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });

        gap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gapActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioButton1);
        jRadioButton1.setText("本番とリハーサルの間の時間");
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });

        jLabel12.setText("分");

        jLabel13.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        jLabel13.setText("本番/リハ間の間");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(gap, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel12))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(live, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(rehearsal, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(have_a_break, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(8, 8, 8)
                                                .addComponent(jLabel6))
                                            .addGroup(layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel8)
                                                    .addComponent(jLabel7))))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel9)
                                            .addComponent(jLabel5)
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                .addGap(36, 36, 36)
                                                .addComponent(jLabel4)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(all)
                                            .addComponent(band)
                                            .addComponent(num, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel10)
                                        .addGap(30, 30, 30)
                                        .addComponent(add)
                                        .addGap(52, 52, 52)
                                        .addComponent(jLabel11))
                                    .addComponent(somethingCalc, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(chooseLive)
                                    .addComponent(chooseRehearsal, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(chooseBreak)
                                    .addComponent(jRadioButton1))
                                .addGap(73, 73, 73)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(chooseBand)
                                    .addComponent(choosePhase)
                                    .addComponent(chooseAll))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 712, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(choosePhase)
                    .addComponent(chooseRehearsal))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chooseBand)
                    .addComponent(chooseLive))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chooseBreak)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButton1)
                    .addComponent(chooseAll, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(jLabel11)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(rehearsal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel6))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(live, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel7))
                                .addGap(17, 17, 17)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(have_a_break, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel8)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(num, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel4))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel5)
                                            .addComponent(band, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(17, 17, 17)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(all, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel9)
                                            .addComponent(jLabel10)))
                                    .addComponent(add, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 29, Short.MAX_VALUE)
                                .addComponent(somethingCalc, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(9, 9, 9))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(gap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel13))
                                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );

        getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void liveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_liveActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_liveActionPerformed

    private void chooseRehearsalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chooseRehearsalActionPerformed
        // TODO add your handling code here:
        par.setMode(1);
        rehearsal.setEditable(false);
        rehearsal.setText("入力不可");

        band.setEditable(true);
        band.setText("");

        live.setEditable(true);
        live.setText("");

        num.setEditable(true);
        num.setText("");

        have_a_break.setEditable(true);
        have_a_break.setText("");

        gap.setEditable(true);
        gap.setText("");


    }//GEN-LAST:event_chooseRehearsalActionPerformed

    private void chooseLiveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chooseLiveActionPerformed
        // TODO add your handling code here:
        par.setMode(2);

        live.setEditable(false);
        live.setText("入力不可");

        band.setEditable(true);
        band.setText("");

        rehearsal.setEditable(true);
        rehearsal.setText("");

        num.setEditable(true);
        num.setText("");
        
        have_a_break.setEditable(true);
        have_a_break.setText("");

        gap.setEditable(true);
        gap.setText("");


    }//GEN-LAST:event_chooseLiveActionPerformed

    private void chooseBreakActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chooseBreakActionPerformed
        // TODO add your handling code here:
        par.setMode(3);
        have_a_break.setEditable(false);
        have_a_break.setText("入力不可");
        
        band.setEditable(true);
        band.setText("");

        rehearsal.setEditable(true);
        rehearsal.setText("");

        num.setEditable(true);
        num.setText("");

        live.setEditable(true);
        live.setText("");

        gap.setEditable(true);
        gap.setText("");


    }//GEN-LAST:event_chooseBreakActionPerformed

    private void somethingCalcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_somethingCalcActionPerformed
        // TODO add your handling code here:
        try{
        switch (par.getMode()) {
            case 0:
                double ideal = par.getIdeal();

                par.setAllTime(c.allTimeCalc(par.getLiveTime(), par.getRehearsalTime(), par.getBandNum(), par.getPhase(), par.getBreakTime(), par.getGap()));
                int hour = (int) (par.getAllTime() / 60);
                int minute = (int) (par.getAllTime() % 60);

                jTextArea1.setText("全体の時間は " + hour + " 時間 " + minute + " 分です。\n");

                if (ideal != 0) {
                    if (ideal > par.getAllTime()) {
                        String dis = String.format("%.1f", ideal - par.getAllTime());
                        jTextArea1.append("目標より " + dis + " 分余裕があります。");
                    } else if (ideal == par.getAllTime()) {
                        jTextArea1.append("目標時間と一致しました。");

                    } else {
                        String dis = String.format("%.1f", par.getAllTime() - ideal);
                        jTextArea1.append("目標を " + dis + " 分オーバーしています。");
                    }
                }
                break;

            case 1:
                par.setRehearsalTime(c.rehearsalTimeCalc(par2.getAllTime(), par.getLiveTime(), par.getBandNum(), par.getPhase(), par.getBreakTime(), par.getGap()));
                BigDecimal rt = new BigDecimal(par.getRehearsalTime());
                rt = rt.setScale(0, BigDecimal.ROUND_FLOOR);
                String rtS = String.format("%.0f", rt);
                jTextArea1.setText("リハーサルの時間は " + rtS + " 分です。\n");

                break;

            case 2:
                par.setLiveTime(c.liveTimeCalc(par2.getAllTime(), par.getRehearsalTime(), par.getBandNum(), par.getPhase(), par.getBreakTime(), par.getGap()));
                BigDecimal lt = new BigDecimal(par.getLiveTime());
                lt = lt.setScale(0, BigDecimal.ROUND_FLOOR);
                String ltS = String.format("%.0f", lt);
                jTextArea1.setText("本番の時間は " + lt + " 分です。\n");

                break;

            case 3:
                par.setBreakTime(c.breakTimeCalc(par2.getAllTime(), par.getRehearsalTime(), par.getLiveTime(), par.getPhase(), par.getBandNum(), par.getGap()));
                BigDecimal bt = new BigDecimal(par.getBreakTime());
                bt = bt.setScale(0, BigDecimal.ROUND_FLOOR);
                String btS = String.format("%.0f", bt);
                jTextArea1.setText("休憩の最大時間は " + btS + " 分です。\n");

                break;

            case 4:
                par.setPhase(c.phaseCalc(par2.getAllTime(), par.getRehearsalTime(), par.getLiveTime(), par.getBreakTime(), par.getBandNum(), par.getGap()));
                BigDecimal p = new BigDecimal(par.getPhase());
                p = p.setScale(0, BigDecimal.ROUND_FLOOR);
                String pS = String.format("%.0f", p);
                jTextArea1.setText("部数の最大は " + pS + " 部です。\n");

                break;

            case 5:
                par.setBandNum(c.bandCalc(par2.getAllTime(), par.getRehearsalTime(), par.getLiveTime(), par.getPhase(), par.getBreakTime(), par.getGap()));
                BigDecimal bn = new BigDecimal(par.getBandNum());
                bn = bn.setScale(0, BigDecimal.ROUND_FLOOR);
                String bnS = String.format("%.0f", bn);
                jTextArea1.setText("バンド数の限界は " + bnS + " バンドです。\n");
                break;
                
            case 6:
                par.setGap(c.gapCalc(par2.getAllTime(), par.getRehearsalTime(), par.getLiveTime(), par.getBreakTime(), par.getBandNum(), par.getPhase()));
                BigDecimal g   = new BigDecimal(par.getGap());
                g = g.setScale(0, BigDecimal.ROUND_FLOOR);
                String gS = String.format("%.0f", g);
                jTextArea1.setText("本番との間で取れるのは " + gS + " 分です。\n");
                break;

        }
        }catch(NumberFormatException e){
            jTextArea1.setText("数値を入力してください");            
        }
    }//GEN-LAST:event_somethingCalcActionPerformed

    private void rehearsalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rehearsalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rehearsalActionPerformed

    private void chooseAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chooseAllActionPerformed
        // TODO add your handling code here:
        par.setMode(0);
        rehearsal.setEditable(true);
        rehearsal.setText("");
        live.setEditable(true);
        live.setText("");
        num.setEditable(true);
        num.setText("");
        have_a_break.setEditable(true);
        have_a_break.setText("");
        band.setEditable(true);
        band.setText("");
        gap.setEditable(true);
        gap.setText("");


    }//GEN-LAST:event_chooseAllActionPerformed

    private void choosePhaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_choosePhaseActionPerformed
        // TODO add your handling code here:
        par.setMode(4);
        num.setEditable(false);
        num.setText("入力不可");

        live.setEditable(true);
        live.setText("");

        band.setEditable(true);
        band.setText("");

        have_a_break.setEditable(true);
        have_a_break.setText("");

        gap.setEditable(true);
        gap.setText("");

        rehearsal.setEditable(true);
        rehearsal.setText("");


    }//GEN-LAST:event_choosePhaseActionPerformed

    private void chooseBandActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chooseBandActionPerformed
        // TODO add your handling code here:
        par.setMode(5);
        band.setEditable(false);
        band.setText("入力不可");

        live.setEditable(true);
        live.setText("");

        rehearsal.setEditable(true);
        rehearsal.setText("");

        num.setEditable(true);
        num.setText("");

        have_a_break.setEditable(true);
        have_a_break.setText("");

        gap.setEditable(true);
        gap.setText("");

        rehearsal.setEditable(true);
        rehearsal.setText("");


    }//GEN-LAST:event_chooseBandActionPerformed

    private void have_a_breakActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_have_a_breakActionPerformed
        // TODO add your handling code here:        
    }//GEN-LAST:event_have_a_breakActionPerformed

    private void allActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_allActionPerformed

    private void numActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_numActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_numActionPerformed

    private void bandActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bandActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_bandActionPerformed

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        // TODO add your handling code here:
        try {
            String rt = rehearsal.getText();
            if ("入力不可".equals(rt)) {
                par.setRehearsalTime(0);
            } else if ("".equals(rt)) {
                jTextArea1.setText("入力のない項目があります");
            } else {
                par.setRehearsalTime(Double.parseDouble(rt));
            }

            String lt = live.getText();
            if ("入力不可".equals(lt)) {
                par.setLiveTime(0);
            } else if ("".equals(lt)) {
                jTextArea1.setText("入力のない項目があります");

            } else {
                par.setLiveTime(Double.parseDouble(lt));
            }

            String bn = band.getText();
            if ("入力不可".equals(bn)) {
                par.setBandNum(0);
            } else if ("".equals(bn)) {
                jTextArea1.setText("入力のない項目があります");

            } else {
                par.setBandNum(Double.parseDouble(bn));
            }

            String p = num.getText();
            if ("入力不可".equals(p)) {
                par.setPhase(0);
            } else if ("".equals(bn)) {
                jTextArea1.setText("入力のない項目があります");

            } else {
                par.setPhase(Double.parseDouble(p));
            }

            String bt = have_a_break.getText();
            if ("入力不可".equals(bt)) {
                par.setBreakTime(0);
            } else {
                par.setBreakTime(Double.parseDouble(bt));
            }

            String g = gap.getText();
            if ("入力不可".equals(g)) {
                par.setGap(0);
            } else if ("".equals(bn)) {
                jTextArea1.setText("入力のない項目があります");

            } else {
                par.setGap(Double.parseDouble(g));
            }

            String at = all.getText();
            if ("".equals(at)) {
                par.setIdeal(0);

            } else if ("".equals(bn)) {
                jTextArea1.setText("入力のない項目があります");

            } else {
                par.setIdeal(Double.parseDouble(all.getText()));
                par2.setAllTime(Double.parseDouble(all.getText()));
            }
            
        } catch (NumberFormatException e) {
            jTextArea1.setText("数値を入力してください");
        }
    }//GEN-LAST:event_addActionPerformed

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        // TODO add your handling code here:
        
        par.setMode(6);
        gap.setEditable(false);
        gap.setText("入力不可");

        live.setEditable(true);
        live.setText("");

        rehearsal.setEditable(true);
        rehearsal.setText("");

        num.setEditable(true);
        num.setText("");

        have_a_break.setEditable(true);
        have_a_break.setText("");

        band.setEditable(true);
        band.setText("");

        rehearsal.setEditable(true);
        rehearsal.setText("");

    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void gapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gapActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_gapActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Live_Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Live_Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Live_Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Live_Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Live_Frame().setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add;
    private javax.swing.JTextField all;
    private javax.swing.JTextField band;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup4;
    private javax.swing.ButtonGroup buttonGroup5;
    private javax.swing.ButtonGroup buttonGroup6;
    private javax.swing.ButtonGroup buttonGroup7;
    private javax.swing.ButtonGroup buttonGroup8;
    private javax.swing.JRadioButton chooseAll;
    private javax.swing.JRadioButton chooseBand;
    private javax.swing.JRadioButton chooseBreak;
    private javax.swing.JRadioButton chooseLive;
    private javax.swing.JRadioButton choosePhase;
    private javax.swing.JRadioButton chooseRehearsal;
    private javax.swing.JTextField gap;
    private javax.swing.JTextField have_a_break;
    private javax.swing.JEditorPane jEditorPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField live;
    private javax.swing.JTextField num;
    private javax.swing.JTextField rehearsal;
    private javax.swing.JButton somethingCalc;
    // End of variables declaration//GEN-END:variables
}
